🐟 DLL (Data Definition Language)
- It is used to create database schema and can be used to define some constraints as well.
- It basically defines the column (Attributes) of the table.
- It doesn’t have any further classification.
- Basic command present in DDL are CREATE, DROP, RENAME, ALTER, TRUNCATE, COMMENT etc.
- DDL does not use WHERE clause in its statement.
- Its commands are auto-committed, the changes are saved in the database permanently. 
- DDL statements affect the whole table.


🐟 DML (Data Manipulation Language)
- It is used to add, retrieve or update the data.
- It add or update the row of the table. These rows are called as tuple.
- It is further classified into Procedural and Non-Procedural DML.
- BASIC command:  UPDATE, INSERT, MERGE, DELETE, CALL etc.
- While DML uses WHERE clause in its statement.
- DML commands are not auto-committed, they are not permanent. So, It is possible to roll back the operation.
- DML effects one or more rows.

🐟 Subquery
- A subquery must be enclosed in parentheses. 
- A subquery must be placed on the right side of the comparison operator. 
- Subqueries cannot manipulate their results internally, therefore ORDER BY clause cannot be added into a subquery. 
- You can use an ORDER BY clause in the main SELECT statement (outer query) which will be the last clause.
- Use single-row operators with single-row subqueries. 
- If a subquery (inner query) returns a null value to the outer query, the outer query will not return any rows when using certain comparison 
operators in a WHERE clause.

🐟 Subqueries Clauses
- FROM, WHERE, HAVING

🐟 Subqueries Statements
-  SELECT, UPDATE, INSERT, DELETE

🐟 Subqueries Operator
- Comparison, Equality, Like

🐟 
TRUNCATE: DLL- deletes the data inside a table, but not the table itself.
DELETE: DML- delete existing records in a table.
DROP: DLL- deletes a table in the database.

🐟 NVL and NVL2 in Oracle
NVL checks if first argument is null and returns second argument:

    select nvl(null, 'arg2') from dual ----------> in this example result will be: arg2;
    select nvl('arg1', 'arg2') from dual ----------> and in this one: arg1;

NVL2 has different logic. If first argument is not null then NVL2 returns second argument, but in other case it will return third argument:

    select nvl2('arg1', 'arg2', 'arg3') from dual ----------> Result: arg2
    select nvl2(null, 'arg2', 'arg3') from dual ----------> Result: arg3

🐟 Single Row Function
 Return a single result row for every row of a queried table or view. 
 These functions can appear in select lists, WHERE clauses, START WITH and CONNECT BY clauses, and HAVING clauses.
